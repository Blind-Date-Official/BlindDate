(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[20400],{71588:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v46.0.0/sdk/barometer",function(){return c(26627)}])},79475:function(c,a,b){"use strict";b.d(a,{Y:function(){return d},Z:function(){return e}});var d="https://snack.expo.dev";function e(a){var c=a.templateId,d=a.code,e=a.files,f=a.baseURL,b={};return e&&Object.keys(e).forEach(function(a){var c=e[a];/\.(jsx?|tsx?|json|md)$/i.test(a)?b[a]={type:"CODE",url:c.match(/^https?:\/\//)?c:"".concat(f,"/").concat(c)}:b[a]={type:"ASSET",contents:c}}),c?b["App.js"]={type:"CODE",url:"".concat(f,"/").concat(c,".js")}:d&&(b["App.js"]={type:"CODE",contents:d}),b}},25374:function(f,d,a){"use strict";a.d(d,{F:function(){return o}});var g=a(26042),h=a(69396),i=a(35944),c=a(70917),b=a(4903);a(67294);var j=a(26084),k=a(18722),l=(0,c.iv)("line-height:1.8rem;margin-top:1.4rem;margin-bottom:1.4rem;color:",b.theme.text.default,";"),m=(0,c.iv)("font-family:",b.typography.fontFaces.medium,";font-weight:400;text-decoration:none;color:",b.theme.link.default,";:hover{text-decoration:underline;}"),n=(0,c.iv)("text-decoration:none;color:",b.theme.link.default,";:hover{text-decoration:underline;}"),e=function(a){var b,c=a.packageName,d=a.hideBareInstructions,e=a.cmd,h=void 0===e?["$ expo install ".concat(c)]:e,f=a.href,o=void 0===f?(b=c,"https://github.com/expo/expo/tree/main/packages/".concat(b.split(" ")[0])):f,g=(0,j.y)().sourceCodeUrl;return(0,i.BX)(i.HY,{children:[(0,i.tZ)(k.o,{cmd:h}),void 0!==d&&d?null:(0,i.BX)("p",{css:l,children:["If you're installing this in a"," ",(0,i.tZ)("a",{css:n,href:"/introduction/managed-vs-bare/#bare-workflow",children:"bare React Native app"}),", you should also follow"," ",(0,i.tZ)("a",{css:m,href:null!=g?g:o,children:"these additional installation instructions"}),"."]})]})};d.Z=e;var o=function(b){var a,c=(0,j.y)().packageName;return(0,i.tZ)(e,(0,h.Z)((0,g.Z)({},b),{packageName:null!==(a=b.packageName)&& void 0!==a?a:c}))}},28045:function(e,c,a){"use strict";var f=a(26042),g=a(35944),b=a(70917),d=a(4903);a(67294);var h=a(35378),i=a(60866),j=(0,b.iv)("margin-bottom:1rem;"),k=(0,b.iv)("text-decoration:none;display:grid;grid-template-columns:20px auto;text-align:left;grid-gap:8px;color:",d.theme.link.default,";"),l=[{title:"Android Device",propName:"android"},{title:"Android Emulator",propName:"emulator"},{title:"iOS Device",propName:"ios"},{title:"iOS Simulator",propName:"simulator"},{title:"Web",propName:"web"},];c.Z=function(a){return(0,g.BX)(g.HY,{children:[(0,g.tZ)(h.H4,{css:j,children:a.title||"Platform Compatibility"}),(0,g.BX)(i.iA,{layout:i.df.Fixed,children:[(0,g.tZ)(i.ss,{children:(0,g.tZ)(i.X2,{children:l.map(function(b){var a=b.title;return(0,g.tZ)(i.qN,{children:a},a)})})}),(0,g.tZ)("tbody",{children:(0,g.tZ)(i.X2,{children:l.map(function(e){var b,h,c;return(0,g.tZ)(i.bL,(0,f.Z)({},(b=a[e.propName],h=e,c=h.title,!0===b?{children:(0,g.tZ)(d.StatusSuccessIcon,{color:d.theme.status.success}),title:"".concat(c," is supported")}:"object"==typeof b?{children:(0,g.BX)("a",{css:k,target:"_blank",href:b.pending,children:[(0,g.tZ)(d.StatusWaitingIcon,{color:d.theme.status.info})," Pending"]}),title:"".concat(c," support is pending")}:{children:(0,g.tZ)(d.StatusFailedIcon,{color:d.theme.status.error}),title:"".concat(c," is not supported")})),e.title)})})})]})]})}},67394:function(f,c,a){"use strict";a.d(c,{Z:function(){return b}});var g=a(51438),h=a(88029),i=a(29815),j=a(82337),k=a(35944),l=a(4903),d=a(67294),m=a(79475),e=a(72093),n=a(48192),o="v".concat(a(4147).i8),b=function(c){(0,h.Z)(a,c);var e=(0,j.Z)(a);function a(){var b;return(0,g.Z)(this,a),b=e.apply(this,arguments),b.contentRef=d.createRef(),b.state={ready:!1},b.getSelectedDocsVersion=function(){var a=b.context.version;return"latest"===a?o:a},b.getSnackSdkVersion=function(){var a=b.getSelectedDocsVersion();return"unversioned"===a&&(a=o),a.replace("v","")},b.getExamplesPath=function(){return"".concat(document.location.origin,"/static/examples/").concat(b.getSelectedDocsVersion())},b.getDependencies=function(){return(0,i.Z)(b.props.dependencies).join(",")},b.getCode=function(){return(b.contentRef.current&&b.contentRef.current.textContent||"").replace(/%%placeholder-start%%.*%%placeholder-end%%/g,"")},b}var b=a.prototype;return b.componentDidMount=function(){this.setState({ready:!0})},b.render=function(){return(0,k.BX)("div",{style:{marginBottom:l.spacing[4]},children:[(0,k.tZ)("div",{ref:this.contentRef,style:this.props.contentHidden?{display:"none"}:void 0,children:this.props.children}),(0,k.BX)("form",{action:m.Y,method:"POST",target:"_blank",children:[(0,k.tZ)("input",{type:"hidden",name:"platform",value:this.props.defaultPlatform||"android"}),(0,k.tZ)("input",{type:"hidden",name:"name",value:this.props.label||"Example"}),(0,k.tZ)("input",{type:"hidden",name:"dependencies",value:this.getDependencies()}),(0,k.tZ)("input",{type:"hidden",name:"sdkVersion",value:this.getSnackSdkVersion()}),this.props.platforms&&(0,k.tZ)("input",{type:"hidden",name:"supportedPlatforms",value:this.props.platforms.join(",")}),this.state.ready&&(0,k.tZ)("input",{type:"hidden",name:"files",value:JSON.stringify((0,m.Z)({templateId:this.props.templateId,code:this.getCode(),files:this.props.files,baseURL:this.getExamplesPath()}))}),(0,k.tZ)(n.z,{disabled:!this.state.ready,iconRight:(0,k.tZ)(l.ArrowUpRightIcon,{color:l.theme.palette.white}),type:"submit",children:this.props.buttonTitle||"Try this example on Snack"})]})]})},a}(d.Component);b.contextType=e.m$,b.defaultProps={dependencies:[]}},18722:function(e,d,c){"use strict";c.d(d,{o:function(){return A}});var f=c(35944),b=c(70917),a=c(4903),g=c(67294),h=function(a){var d=a.children,e=a.style,c=a.includeMargin;return(0,f.tZ)("div",{css:[i,(void 0===c||c)&&j,(0,b.iv)(e)],children:d})},i=(0,b.iv)({display:"flex",flexDirection:"column"}),j=(0,b.iv)({marginBottom:a.spacing[4]}),k=function(a){var d=a.children,b=a.alwaysDark,c=a.hideOverflow;return(0,f.tZ)("div",{css:[l,void 0!==b&&b&&m,void 0!==c&&c&&n],children:d})},l=(0,b.iv)("background-color:",a.theme.palette.black,";border:1px solid ",a.theme.border.default,";border-bottom-left-radius:",a.borderRadius.medium,"px;border-bottom-right-radius:",a.borderRadius.medium,"px;padding:",a.spacing[4],"px;overflow-x:auto;code{padding-left:0;padding-right:0;}"),m=(0,b.iv)("border-color:transparent;white-space:nowrap;"),n=(0,b.iv)("overflow:hidden;code{white-space:nowrap;}"),o=c(69036),p=function(b){var g=b.title,c=b.children,d=b.alwaysDark,e=void 0!==d&&d;return(0,f.BX)("div",{css:[q,e&&r],children:[(0,f.tZ)(o.GP,{css:[s,e&&{color:a.darkTheme.text.default}],children:g}),!!c&&(0,f.tZ)("div",{css:t,children:c})]})},q=(0,b.iv)("background-color:",a.theme.background.default,";border:1px solid ",a.theme.border.default,";border-bottom:none;border-top-left-radius:",a.borderRadius.medium,"px;border-top-right-radius:",a.borderRadius.medium,"px;display:flex;padding:0 8px 0 16px;justify-content:space-between;min-height:42px;"),r=(0,b.iv)("background-color:",a.darkTheme.background.tertiary,";border-color:transparent;"),s=(0,b.iv)("line-height:42px !important;user-select:none;"),t=(0,b.iv)("display:flex;justify-content:flex-end;align-items:center;"),u=c(26042),v=c(69396),w=c(99534),x=c(48192),y=function(b){var h=b.children,c=b.icon,d=b.alwaysDark,e=void 0!==d&&d,i=(0,w.Z)(b,["children","icon","alwaysDark"]),j={color:e?a.darkTheme.text.default:void 0,size:a.iconSize.small},k=c&&g.cloneElement(c,j);return(0,f.tZ)(x.z,(0,v.Z)((0,u.Z)({size:"mini",theme:"transparent",icon:k},i),{children:(0,f.tZ)(o.u5,{css:e&&{color:a.darkTheme.text.default},children:h})}))},z=function(b){var h=b.text,e=(0,w.Z)(b,["text"]),c=(0,g.useState)(!1),d=c[0],i=c[1];return(0,f.tZ)(y,(0,v.Z)((0,u.Z)({icon:(0,f.tZ)(a.ClipboardIcon,{}),onClick:function(){var a;null===(a=navigator.clipboard)|| void 0===a||a.writeText(h),i(!0),setTimeout(function(){return i(!1)},1500)},disabled:d},e),{children:d?"Copied!":"Copy"}))},A=function(a){var b=a.cmd,e=a.cmdCopy,g=a.hideOverflow,c=a.includeMargin,d=a.title;return(0,f.BX)(h,{style:D,includeMargin:void 0===c||c,children:[(0,f.tZ)(p,{alwaysDark:!0,title:void 0===d?"Terminal":d,children:B({cmd:b,cmdCopy:e})}),(0,f.tZ)(k,{alwaysDark:!0,hideOverflow:g,children:b.map(C)})]})};function B(a){var c=a.cmd,d=a.cmdCopy,b=d||function(b){var a=b.filter(function(a){return!a.startsWith("#")&&""!==a});if(1===a.length)return a[0].startsWith("$")?a[0].slice(2):a[0]}(c);return b&&(0,f.tZ)(z,{alwaysDark:!0,text:b})}function C(b,d){var c="line-".concat(d);return""===b.trim()?(0,f.tZ)("br",{css:E},c):b.startsWith("#")?(0,f.tZ)(o.cO,{css:[F,E,{color:a.darkTheme.code.comment}],children:b},c):b.startsWith("$")?(0,f.BX)("div",{children:[(0,f.tZ)(o.cO,{css:[F,E,{display:"inline",color:a.darkTheme.text.secondary},],children:"\u2192\xa0"}),(0,f.tZ)(o.cO,{css:F,children:b.substring(1).trim()})]},c):(0,f.tZ)(o.cO,{css:[F,{display:"inherit"}],children:b},c)}var D=(0,b.iv)("li &{margin-top:",a.spacing[4],"px;display:flex;}"),E=(0,b.iv)("user-select:none;"),F=(0,b.iv)("display:inline-block;line-height:130%;background-color:transparent;border:none;color:",a.darkTheme.text.default,";")},26627:function(f,b,a){"use strict";a.r(b),a.d(b,{default:function(){return e},headings:function(){return d},meta:function(){return c}});var g=a(99534);a(67294);var h=a(3905),i=a(25374),j=a(28045),k=a(67394),l=a(84059),c={title:"Barometer",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-46/packages/expo-sensors",packageName:"expo-sensors"},d=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Usage"},{depth:2,type:"text",title:"API"},{depth:2,type:"text",title:"Methods"},{depth:3,type:"inlineCode",title:"Barometer.isAvailableAsync()"},{depth:4,type:"text",title:"Returns"},{depth:3,type:"inlineCode",title:"Barometer.addListener((data: BarometerMeasurement) => void)"},{depth:4,type:"text",title:"Arguments"},{depth:4,type:"text",title:"Returns"},{depth:3,type:"inlineCode",title:"Barometer.removeAllListeners()"},{depth:2,type:"text",title:"Types"},{depth:3,type:"inlineCode",title:"BarometerMeasurement"},{depth:2,type:"text",title:"Units and Providers"}],m={meta:c,headings:d};function e(a){var b=a.components,c=(0,g.Z)(a,["components"]);return(0,h.kt)("wrapper",Object.assign({},m,c,{components:b,mdxType:"MDXLayout"}),(0,h.kt)("p",null,(0,h.kt)("inlineCode",{parentName:"p"},"Barometer")," from ",(0,h.kt)("strong",{parentName:"p"},(0,h.kt)("inlineCode",{parentName:"strong"},"expo-sensors"))," provides access to the device barometer sensor to respond to changes in air pressure. ",(0,h.kt)("inlineCode",{parentName:"p"},"pressure")," is measured in ",(0,h.kt)("em",{parentName:"p"},(0,h.kt)("inlineCode",{parentName:"em"},"hectopascals"))," or ",(0,h.kt)("em",{parentName:"p"},(0,h.kt)("inlineCode",{parentName:"em"},"hPa")),"."),(0,h.kt)(j.Z,{android:!0,emulator:!0,ios:!0,mdxType:"PlatformsSection"}),(0,h.kt)("h2",Object.assign({},{id:"installation"}),"Installation"),(0,h.kt)(i.F,{mdxType:"APIInstallSection"}),(0,h.kt)("h2",Object.assign({},{id:"usage"}),"Usage"),(0,h.kt)(k.Z,{label:"Basic Barometer usage",dependencies:["expo-sensors"],mdxType:"SnackInline"},(0,h.kt)("pre",null,(0,h.kt)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, Platform } from 'react-native';\nimport { Barometer } from 'expo-sensors';\n\nexport default function App() {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    _toggle();\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      _unsubscribe();\n    };\n  }, []);\n\n  const _toggle = () => {\n    if (this._subscription) {\n      _unsubscribe();\n    } else {\n      _subscribe();\n    }\n  };\n\n  const _subscribe = () => {\n    this._subscription = Barometer.addListener(barometerData => {\n      setData(barometerData);\n    });\n  };\n\n  const _unsubscribe = () => {\n    this._subscription && this._subscription.remove();\n    this._subscription = null;\n  };\n\n  const { pressure = 0, relativeAltitude = 0 } = data;\n\n  return (\n    <View style={styles.sensor}>\n      <Text>Barometer:</Text>\n      <Text>Pressure: {pressure * 100} Pa</Text>\n      <Text>\n        Relative Altitude:{' '}\n        {Platform.OS === 'ios' ? `${relativeAltitude} m` : `Only available on iOS`}\n      </Text>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity onPress={_toggle} style={styles.button}>\n          <Text>Toggle</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\n/* @hide const styles = StyleSheet.create({ ... }); */\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    marginTop: 15,\n  },\n  button: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#eee',\n    padding: 10,\n  },\n  sensor: {\n    marginTop: 45,\n    paddingHorizontal: 10,\n  },\n});\n/* @end */\n"))),(0,h.kt)("h2",Object.assign({},{id:"api"}),"API"),(0,h.kt)("pre",null,(0,h.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import { Barometer } from 'expo-sensors';\n")),(0,h.kt)("h2",Object.assign({},{id:"methods"}),"Methods"),(0,h.kt)("h3",Object.assign({},{id:"barometerisavailableasync"}),(0,h.kt)("inlineCode",{parentName:"h3"},"Barometer.isAvailableAsync()")),(0,h.kt)("blockquote",null,(0,h.kt)("p",{parentName:"blockquote"},"You should always check the sensor availability before attempting to use it.")),(0,h.kt)("p",null,"Returns a promise which resolves into a boolean denoting the availability of the device barometer."),(0,h.kt)("table",null,(0,h.kt)("thead",{parentName:"table"},(0,h.kt)("tr",{parentName:"thead"},(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"OS"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Availability"))),(0,h.kt)("tbody",{parentName:"table"},(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"iOS"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"iOS 8+")),(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Android"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Android 2.3+ (API Level 9+)")),(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Web"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("inlineCode",{parentName:"td"},"N/A"))))),(0,h.kt)("h4",Object.assign({},{id:"returns"}),"Returns"),(0,h.kt)("ul",null,(0,h.kt)("li",{parentName:"ul"},"A promise that resolves to a ",(0,h.kt)("inlineCode",{parentName:"li"},"boolean")," denoting the availability of the sensor.")),(0,h.kt)("h3",Object.assign({},{id:"barometeraddlistenerdata-barometermeasurement--void"}),(0,h.kt)("inlineCode",{parentName:"h3"},"Barometer.addListener((data: BarometerMeasurement) => void)")),(0,h.kt)("p",null,"Subscribe for updates to the barometer."),(0,h.kt)("pre",null,(0,h.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const subscription = Barometer.addListener(({ pressure, relativeAltitude }) => {\n  console.log({ pressure, relativeAltitude });\n});\n")),(0,h.kt)("h4",Object.assign({},{id:"arguments"}),"Arguments"),(0,h.kt)("ul",null,(0,h.kt)("li",{parentName:"ul"},(0,h.kt)("strong",{parentName:"li"},"listener (",(0,h.kt)("em",{parentName:"strong"},"function"),")")," -- A callback that is invoked when an barometer update is available. When invoked, the listener is provided a single argument that is an object containing: ",(0,h.kt)("inlineCode",{parentName:"li"},"pressure: number")," (",(0,h.kt)("em",{parentName:"li"},(0,h.kt)("inlineCode",{parentName:"em"},"hPa")),"). On ",(0,h.kt)("strong",{parentName:"li"},"iOS")," the ",(0,h.kt)("inlineCode",{parentName:"li"},"relativeAltitude: number")," (",(0,h.kt)("em",{parentName:"li"},(0,h.kt)("inlineCode",{parentName:"em"},"meters")),") value will also be available.")),(0,h.kt)("h4",Object.assign({},{id:"returns-1"}),"Returns"),(0,h.kt)("ul",null,(0,h.kt)("li",{parentName:"ul"},"A subscription that you can call ",(0,h.kt)("inlineCode",{parentName:"li"},"remove()")," on when you would like to unsubscribe the listener.")),(0,h.kt)("h3",Object.assign({},{id:"barometerremovealllisteners"}),(0,h.kt)("inlineCode",{parentName:"h3"},"Barometer.removeAllListeners()")),(0,h.kt)("p",null,"Removes all listeners."),(0,h.kt)("h2",Object.assign({},{id:"types"}),"Types"),(0,h.kt)("h3",Object.assign({},{id:"barometermeasurement"}),(0,h.kt)("inlineCode",{parentName:"h3"},"BarometerMeasurement")),(0,h.kt)("p",null,"The altitude data returned from the native sensors."),(0,h.kt)("pre",null,(0,h.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),"type BarometerMeasurement = {\n  pressure: number;\n  /* iOS Only */\n  relativeAltitude?: number;\n};\n")),(0,h.kt)("table",null,(0,h.kt)("thead",{parentName:"table"},(0,h.kt)("tr",{parentName:"thead"},(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Type"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Format"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"iOS"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Android"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Web"))),(0,h.kt)("tbody",{parentName:"table"},(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"pressure"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("inlineCode",{parentName:"td"},"number")),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("inlineCode",{parentName:"td"},"hPa")),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"\u2705"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"\u2705"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"\u274C")),(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"relativeAltitude"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)(l.ZM,{mdxType:"InlineCode"},"number ","|"," undefined")),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("inlineCode",{parentName:"td"},"meters")),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"\u2705"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"\u274C"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"\u274C")))),(0,h.kt)("h2",Object.assign({},{id:"units-and-providers"}),"Units and Providers"),(0,h.kt)("table",null,(0,h.kt)("thead",{parentName:"table"},(0,h.kt)("tr",{parentName:"thead"},(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"OS"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Units"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Provider"),(0,h.kt)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),(0,h.kt)("tbody",{parentName:"table"},(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"iOS"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("em",{parentName:"td"},(0,h.kt)("inlineCode",{parentName:"em"},"hPa"))),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("a",Object.assign({parentName:"td"},{href:"https://developer.apple.com/documentation/coremotion/cmaltimeter"}),(0,h.kt)("inlineCode",{parentName:"a"},"CMAltimeter"))),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Altitude events reflect the change in the current altitude, not the absolute altitude.")),(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Android"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("em",{parentName:"td"},(0,h.kt)("inlineCode",{parentName:"em"},"hPa"))),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("a",Object.assign({parentName:"td"},{href:"https://developer.android.com/reference/android/hardware/Sensor#TYPE_PRESSURE"}),(0,h.kt)("inlineCode",{parentName:"a"},"Sensor.TYPE_PRESSURE"))),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Monitoring air pressure changes.")),(0,h.kt)("tr",{parentName:"tbody"},(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"Web"),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("inlineCode",{parentName:"td"},"N/A")),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),(0,h.kt)("inlineCode",{parentName:"td"},"N/A")),(0,h.kt)("td",Object.assign({parentName:"tr"},{align:null}),"This sensor is not available on the web and cannot be accessed. An ",(0,h.kt)("inlineCode",{parentName:"td"},"UnavailabilityError")," will be thrown if you attempt to get data.")))))}e.isMDXComponent=!0},4147:function(a){"use strict";a.exports={i8:"46.0.0"}}},function(a){a.O(0,[49774,92888,40179],function(){var b;return a(a.s=71588)}),_N_E=a.O()}])